pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

def prop = { String key ->
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    properties.containsKey(key) ? properties[key] as String : null
}

def gitUserName = System.env.GIT_USERNAME ?: getGithubUsername()
def gitPat = System.env.GIT_PAT ?: getGithubUserPassword()

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
        mavenLocal()

        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/millicast/maven")
            credentials {
                username = gitUserName
                logger.lifecycle("User name: ${gitUserName}")
                password = gitPat
            }
        }

        if (null != System.env.DOLBY_INTERNAL_MAVEN_URL && null != System.env.DOLBY_INTERNAL_MAVEN_USER && null != System.env.DOLBY_INTERNAL_MAVEN_PASSWORD) {
            maven {
                name = "Snapshots"
                url = uri("$System.env.DOLBY_INTERNAL_MAVEN_URL")
                credentials {
                    username = "$System.env.DOLBY_INTERNAL_MAVEN_USER"
                    password = "$System.env.DOLBY_INTERNAL_MAVEN_PASSWORD"
                }
                authentication {
                    digest(BasicAuthentication)
                }
            }
        }
    }
}

def getGithubUsername() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    def githubUserName = properties.getProperty('githubUsername', null)
    if (githubUserName == null) {
        throw new GradleException(
                "Github username not found. Define location with githubUsername in the local.properties file")
    }
    return githubUserName
}
def getGithubUserPassword() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    def githubUserPassword = properties.getProperty('githubPat', null)
    if (githubUserPassword == null) {
        throw new GradleException(
                "Github PAT not found. Define location with githubPat in the local.properties file")
    }
    return githubUserPassword
}

rootProject.name = "rts-app-android-viewer"
include ':app'
include ':rtscomponentkit'
include ':uikit'
include ':interactiveplayer'
